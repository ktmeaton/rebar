[package]
name    = "rebar"
version = "0.3.0"
edition = "2021"

[features]
default  = ["cli", "download", "phylo"]
cli      = ["dep:clap", "dep:env_logger", "serde"]
doc      = ["test"]
download = ["dep:reqwest", "dep:tempfile", "reqwest/json", "reqwest/default-tls", "serde"]
native-tls-vendored = ["dep:reqwest", "reqwest/native-tls-vendored"]
phylo    = ["dep:rebar-phylo", "serde"]
serde    = ["dep:serde", "dep:serde_json", "chrono/serde", "serde/derive", "serde_json/std", "rebar-phylo/serde"]
test     = ["dep:tempfile", "dep:tokio-test"]

[dependencies]
csv             = { version = "1.3.0",   default-features = false }
chrono          = { version = "0.4.31",  default-features = false, features = ["clock"] }
clap            = { version = "4.2.7",   default-features = true,  features = ["derive", "string"], optional = true}
color-eyre      = { version = "0.6.2",   default-features = false }
# either          = { version = "1.9.0",   default-features = false }
env_logger      = { version = "0.10.0",  default-features = false, optional = true }
# image           = { version = "0.24.6",  default-features = false }
# indicatif       = { version = "0.17.5",  default-features = false, features = ["rayon"]}
indoc           = { version = "2.0.4",   default-features = false }
# itertools       = { version = "0.12.0",  default-features = false, features = ["use_std"] }
log             = { version = "0.4.17",  default-features = false }
# noodles         = { version = "0.59.0",  default-features = false, features = ["core", "fasta"]}
# openssl         = { version = "0.10.60", default-features = false, features = ["vendored"], optional = true}
# raqote          = { version = "0.8.2",   default-features = false, features = ["png"]}
# rand            = { version = "0.8.5",   default-features = false, features = ["std", "std_rng"] }
# rayon           = { version = "1.7.0",   default-features = false }
rebar-phylo     = { version = "0.3.0",   default-features = false, optional = true, path = "../rebar-phylo" }
#reqwest         = { version = "0.11.18", default-features = false, features = ["native-tls-vendored"], optional = true }
reqwest         = { version = "0.11.18", default-features = false, optional = true }
# rustix          = { version = "0.38.25", default-features = false }
# rusttype        = { version = "0.9.3",   default-features = false, features = ["std"]}
semver          = { version = "1.0.19",  default-features = false, features = ["std"] }
serde           = { version = "1.0.163", default-features = false, optional = true }
serde_json      = { version = "1.0.96",  default-features = false, optional = true }
# structdoc       = { version = "0.1.4",   default-features = false, features = ["structdoc-derive"]}
strum           = { version = "0.25",    default-features = false, features = ["derive"] }
tabled          = { version = "0.15.0",  default-features = true, features = ["std"] }
tempfile        = { version = "3.8.1",   default-features = false, optional = true }
tokio           = { version = "1.28.1",  default-features = false, features = ["macros", "rt-multi-thread"] }
tokio-test      = { version = "0.4.3",   default-features = false, optional = true }
zstd            = { version = "0.13.0",  default-features = false }

# [dev-dependencies]
# cargo-llvm-cov    = { version = "0.6.0", default-features = false }
# flamegraph        = { version = "0.6.4", default-features = false }
# pretty_assertions = { version = "1.4.0", default-features = false }

# Enable a small amount of optimization in debug mode
[profile.dev]
opt-level = 1

# Enable high optimizations for dependencies (incl. Bevy), but not for our code:
[profile.dev.package."*"]
opt-level = 3

[profile.release]
# Binary size reduction tips from: https://github.com/johnthagen/min-sized-rust
strip         = true  # Strip Symbols from Binary
#opt-level     = "z"  # Optimize For Size
lto           = true # Enable Link Time Optimization (LTO)
codegen-units = 1 # Reduce Parallel Code Generation Units to Increase Optimization

#[package.metadata.docs.rs]
#all-features = true

# rust-analyzer settings, one day for: https://github.com/rust-lang/rust-analyzer/issues/6113
# now just currently for VSCode settings.json
# [package.metadata.rust-analyzer]
# "rust-analyzer.server.extraEnv": {
#     "CARGO_TARGET_DIR": "target/analyzer"
# },
# "rust-analyzer.check.extraArgs": [
#     "--target-dir=target/analyzer"
# ]
