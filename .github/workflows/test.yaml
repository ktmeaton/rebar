name: Test

on:
  push:
    branches:
      - '*'
  pull_request:
    branches:
      - '*'
  release:
    types: [published]


env:
  GITHUB_USERNAME: ${{ github.actor }}
  GITHUB_TOKEN: ${{ github.token }}
  DOCKER_IMAGE: "ghcr.io/${{ github.repository }}:${{ github.ref_name }}"

jobs:

  # build:
  #   uses: ./.github/workflows/build.yaml

  # ---------------------------------------------------------------------------
  test:

    #needs: build
    #if: ${{ always() }}

    strategy:
      fail-fast: false
      matrix:
        include:
          # linux
          - arch: x86_64-unknown-linux-musl
            os: ubuntu-latest
          # windows
          - arch: x86_64-pc-windows-gnu
            os: windows-latest
          # macOS
          - arch: x86_64-apple-darwin
            os: macos-latest
          # docker
          - arch: docker
            os: ubuntu-latest

    runs-on: ${{ matrix.os }}

    steps:
      - name: checkout repo
        uses: actions/checkout@v3

      # ------------------------------------------------------------------------
      # How we execute the program depends on the architecture
      - name: set run command (windows)
        if: matrix.os == 'windows-latest'
        run: echo RUN_CMD="./rebar.exe" >> $GITHUB_ENV

      - name: set run command (docker)
        if: matrix.arch == 'docker'
        run: echo RUN_CMD="docker run $DOCKER_IMAGE" >> $GITHUB_ENV

      - name: set run command (linux, mac)
        if: matrix.os == 'ubuntu-latest' || matrix.os == 'macos-latest'
        run: echo RUN_CMD="./rebar" >> $GITHUB_ENV

      - name: check run command
        run: echo $RUN_CMD

      # - name: download build output
      #   uses: actions/download-artifact@v3
      #   with:
      #     name: rebar-${{ matrix.arch }}
      #     path: target/${{ matrix.arch }}/release

      # - name: install
      #   if: ${{ matrix.arch != docker }}
      #   run: |
      #     chmod +x target/${{ matrix.arch }}/release/${{ matrix.binary }}
      #     cp target/${{ matrix.arch }}/release/${{ matrix.binary }} .
      #     ./${{ matrix.binary }} --help

      # - name: load docker image
      #   if: ${{ matrix.arch == docker }}
      #   run: |
      #     docker load --input ${{ env.DOCKER_IMAGE }}

      # - name: dataset list
      #   run: |
      #     prefix=
      #     ${{ matrix.prefix }}${{ matrix.binary }} dataset list

      # - name: dataset download
      #   run: |
      #     ${{ matrix.prefix }}${{ matrix.binary }} dataset download --name sars-cov-2 --tag 2023-11-17 --output-dir dataset/sars-cov-2/2023-11-17

      # - name: example 1
      #   run: |
      #     ${{ matrix.prefix }}${{ matrix.binary }} run  --dataset-dir dataset/sars-cov-2/2023-11-17 --output-dir output/example1 --populations "AY.4.2*,BA.5.2,XBC.1.6*,XBB.1.5.1,XBL"
      #     ${{ matrix.prefix }}${{ matrix.binary }} plot --dataset-dir dataset/sars-cov-2/2023-11-17 --output-dir output/example1

      # - name: example 2
      #   run: |
      #     ${{ matrix.prefix }}${{ matrix.binary }} run  --dataset-dir dataset/sars-cov-2/2023-11-17 --output-dir output/example2 --alignment data/example2.fasta
      #     ${{ matrix.prefix }}${{ matrix.binary }} plot --dataset-dir dataset/sars-cov-2/2023-11-17 --output-dir output/example2

      # - name: toy1
      #   run: |
      #     ${{ matrix.prefix }}${{ matrix.binary }} run  --dataset-dir dataset/toy1 --output-dir output/toy1 --populations "*" --mask 0,0 --min-length 1
      #     ${{ matrix.prefix }}${{ matrix.binary }} plot --dataset-dir dataset/toy1 --output-dir output/toy1

      # - name: upload output
      #   uses: actions/upload-artifact@v3
      #   with:
      #     name: output-${{ matrix.arch }}
      #     path: output
      #     if-no-files-found: error
      #     retention-days: 7
