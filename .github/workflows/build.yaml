name: Build

on:
  push:
    branches:
      - '*'
  pull_request:
    branches:
      - '*'
  release:
    types: [published]
  workflow_call:

jobs:

  # ---------------------------------------------------------------------------
  build:

    strategy:
      fail-fast: false
      matrix:
        include:
          # Linux
          - arch: aarch64-unknown-linux-musl
            os: ubuntu-latest
          - arch: x86_64-unknown-linux-musl
            os: ubuntu-latest
          # Linux cross-compile to windows
          - arch: x86_64-pc-windows-gnu
            os: ubuntu-latest
          # macOS
          - arch: aarch64-apple-darwin
            os: macos-latest
          - arch: x86_64-apple-darwin
            os: macos-latest

    runs-on: ${{ matrix.os }}

    steps:

      # ---------------------------------------------------------------------------
      # Linux Cross-Compile

      - name: checkout repo
        uses: actions/checkout@v3

      - name: setup rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: 1.74.0

      - name: install cross
        if: matrix.os == 'ubuntu-latest'
        run: |
          cargo install cross

      - name: install macOS target
        if: matrix.os == 'macos-latest'
        run: |
          rustup target add ${{ matrix.arch }}

      - name: build (cross)
        if: matrix.os == 'ubuntu-latest'
        run: |
          cross build --release --all-features --target ${{ matrix.arch }}

      - name: build (macos)
        if: matrix.os == 'macos-latest'
        run: |
          cargo build --release --all-features --target ${{ matrix.arch }}

      - name: check
        run: |
          ls -l
          ls -l target
          ls -l target/${{ matrix.arch }}
          ls -l target/${{ matrix.arch }}/release


      # not supported on darwin
      - name: compress with upx
        if: matrix.os == 'ubuntu-latest'
        uses: crazy-max/ghaction-upx@v3
        with:
          version: v4.1.0
          files: |
            target/${{ matrix.arch }}/release/rebar
          args: --best --lzma

      - name: upload binary
        uses: actions/upload-artifact@v3
        with:
          name: rebar-${{ matrix.arch }}
          path: target/${{ matrix.arch }}/release/rebar
          retention-days: 7
          if-no-files-found: error
